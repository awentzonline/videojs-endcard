{"name":"VideoJS Endcards","tagline":"Simple, customizable end card solution for VideoJS.","body":"Skip to the end to see the end card:\r\n\r\n<video id='video'\r\n       src='http://video-js.zencoder.com/oceans-clip.mp4'\r\n       class='video-js vjs-default-skin'\r\n       width='640'\r\n       height='264'\r\n       poster='http://video-js.zencoder.com/oceans-clip.jpg'\r\n       controls>\r\n  <source src=\"http://video-js.zencoder.com/oceans-clip.mp4\" type='video/mp4'>\r\n  <source src=\"http://video-js.zencoder.com/oceans-clip.webm\" type='video/webm'>\r\n  <source src=\"http://video-js.zencoder.com/oceans-clip.ogv\" type='video/ogg'>\r\n  <p>Video Playback Not Supported</p>\r\n</video>\r\n\r\nThis plugin adds an end card container, which shows/hides based on the VideoJS's `playing` and `ended` events. By implementing the `getRelatedContent` function, it can display thumbnails for content your users might be interested in, and you can implement the `getNextVid` function to drive your users to a page after `x` amount of seconds.\r\n\r\nThe plugin is unopiniated on what kind of markup your thumbnails have - it just takes whatever you give it and appends it to the corresponding container div.\r\n\r\nClone the repo and take a look!\r\n\r\n## Getting Started\r\n```js\r\n<link href=\"http://vjs.zencdn.net/4.0/video-js.css\" rel=\"stylesheet\">\r\n<link href=\"http://theonion.github.io/videojs-endcard/stylesheets/videojs.endcard.css\" rel=\"stylesheet\">\r\n<script src=\"http://vjs.zencdn.net/4.0/video.js\"></script>\r\n<script src=\"http://theonion.github.io/videojs-endcard/javascripts/videojs.endcard.js\"></script>\r\n<script>\r\n// Sync or Async, you decide.\r\nfunction getRelatedContent(callback) {\r\n    var div = document.createElement('div');\r\n    var p = document.createElement('p');\r\n    p.innerHTML = \"So Cool You'll HAVE to Click This!\";\r\n    div.appendChild(p);\r\n    setTimeout(function(){\r\n        // Needs an array\r\n        callback([div]);\r\n    }, 0);\r\n}\r\n\r\nfunction getNextVid(callback) {\r\n    var div = document.createElement('div');\r\n    var anchor = document.createElement('a');\r\n    anchor.innerHTML = \"Users will be taken to the VideoJS website after 10 seconds!\"\r\n    anchor.href = \"http://www.videojs.com/\"\r\n    div.appendChild(anchor)\r\n    setTimeout(function(){\r\n        callback(div);\r\n    }, 0);\r\n}\r\n\r\nvar video = videojs('video');\r\nvideo.endcard({\r\n    getRelatedContent: getRelatedContent,\r\n//  getNextVid: getNextVid    //uncomment this for auto-playing video\r\n})\r\n</script>\r\n```\r\n\r\n\r\n## Styling\r\n\r\nCheck out [videojs.endcard.less](http://theonion.github.io/videojs-endcard/stylesheets/videojs.endcard.less) for ideas on how to style the endcard. The default id's are in the options.\r\n\r\n\r\n## Options\r\n\r\n**Functions**:\r\n\r\n`getRelatedContent` : **Required** for display of related content. It must invoke the callback function, which takes an **array of DOM Elements** and appends them to the \"related-content\" container.\r\n\r\n`getNextVid` : **Required** for autoplaying video. It must invoke the callback function, which takes a **single DOM Element** and appends it to the \"next-video\" container. When the countdown ends, the user is taken to the **first** anchor href that is found in the DOM Element passed to the callback function.\r\n\r\n**Styling Stuff**:\r\n* `endcard` : id for the end card. Default = \"player-endcard\"\r\n* `related` : id for div containing related content thumbnails. Default = \"related-content\"\r\n* `next` : id for div containing the thumbnail for the upcoming video. Default = \"next-video\"\r\n* `count` : number of seconds until the next video. Default = 10\r\n* `counter` : id for the countdown number. Default = \"counter\"\r\n* `countdown` : id for the div containing the countdown. Default = \"countdown\"\r\n* `countdown_text` : text displayed for the countdown. Default = \"Next video in:\"\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}