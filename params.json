{"name":"VideoJS Endcards","tagline":"Simple, customizable end card solution for VideoJS.","body":"## VideoJS End Cards\r\n\r\nSimple, customizable end card solution for VideoJS.\r\n\r\n\r\n\r\nThis plugin adds an end card container, which shows/hides based on the VideoJS's `playing` and `ended` events. By implementing the `getRelatedContent` function, it can display thumbnails for content your users might be interested in, and you can implement the `getNextVid` function to drive your users to a page after `x` amount of seconds.\r\n\r\nThe plugin is unopiniated on what kind of markup your thumbnails have - it just takes whatever you give it and appends it to the corresponding container div.\r\n\r\nFork the repo and take a look!\r\n\r\n## Example\r\n```js\r\n<script src=\"http://vjs.zencdn.net/4.0/video.js\"></script>\r\n<script src='videojs.endcard.js'></script>\r\n<script>\r\n// Sync or Async, you decide.\r\nfunction getRelatedContent(callback) {\r\n    var el = document.createElement('p');\r\n    el.innerHTML = \"So Cool You'll HAVE to Click This!\"\r\n    setTimeout(function(){\r\n        // Needs an array\r\n        callback([el])\r\n    }, 0);\r\n}\r\n\r\nfunction getNextVid(callback) {\r\n    var anchor = document.createElement('a');\r\n    anchor.innerHTML = \"Users will be taken to the VideoJS website after 10 seconds!\"\r\n    anchor.href = \"http://www.videojs.com/\"\r\n    setTimeout(function(){\r\n        callback(anchor)\r\n    }, 0);\r\n}\r\n\r\nvar video = videojs('video');\r\nvideo.endcard({\r\n    getRelatedContent: getRelatedContent,\r\n    getNextVid: getNextVid\r\n})\r\n</script>\r\n```\r\n\r\nAlso, `example.html` is a more detailed demo.\r\n\r\n\r\n## Styling\r\n\r\nCheck out `videojs.endcard.less` for ideas on how to style the endcard. The default id's are in the options.\r\n\r\n\r\n## Options\r\n\r\n**Functions**:\r\n\r\n`getRelatedContent` : **Required** for display of related content. It must invoke the callback function, which takes an **array of DOM Elements** and appends them to the \"related-content\" container.\r\n\r\n`getNextVid` : **Required** for autoplaying video. It must invoke the callback function, which takes a **single DOM Element** and appends it to the \"next-video\" container. When the countdown ends, the user is taken to the **first** anchor href that is found in the DOM Element passed to the callback function.\r\n\r\n**Styling Stuff**:\r\n* `endcard` : id for the end card. Default = \"player-endcard\"\r\n* `related` : id for div containing related content thumbnails. Default = \"related-content\"\r\n* `next` : id for div containing the thumbnail for the upcoming video. Default = \"next-video\"\r\n* `count` : number of seconds until the next video. Default = 10\r\n* `counter` : id for the countdown number. Default = \"counter\"\r\n* `countdown` : id for the div containing the countdown. Default = \"countdown\"\r\n* `countdown_text` : text displayed for the countdown. Default = \"Next video in:\"\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}